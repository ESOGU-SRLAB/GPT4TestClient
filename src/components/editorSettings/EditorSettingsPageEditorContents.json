{
    "inputEditorPreviewEditorContent": "def binary_search(arr, target):\n    left, right = 0, len(arr) - 1\n    \n    while left <= right:\n        mid = (left + right) // 2\n        mid_val = arr[mid]\n\n        if mid_val == target:\n            return mid\n        elif mid_val < target:\n            left = mid + 1\n        else:\n            right = mid - 1\n\n    return -1",
    "outputEditorPreviewEditorContent": "import unittest\n\nclass TestBinarySearch(unittest.TestCase):\n\n    def test_found(self):\n        arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n        target = 4\n        result = binary_search(arr, target)\n        self.assertEqual(result, 3)  # Index of 4 in the array is 3\n\n    def test_not_found(self):\n        arr = [10, 20, 30, 40, 50]\n        target = 35\n        result = binary_search(arr, target)\n        self.assertEqual(result, -1)  # Target is not in the array\n\n    def test_empty_array(self):\n        arr = []\n        target = 1\n        result = binary_search(arr, target)\n        self.assertEqual(result, -1)  # Empty array\n\nif __name__ == '__main__':\n    unittest.main()"
}
